cc = g++  # use g++ compiler
path = ..
standard = c++17

IDIR =.
BDIR=./bin
SDIR =./src

flags = -std=$(standard)  # compile with standard
flags += -Wall  # compile with all warnings
flags += -pedantic  # even more warnings
flags += -I $(path)  # add parent to preprocessor include path
flags += -g  # include gdb instrumentation


link = $(cc) $(flags) -o  # final linked build to binary executable

compile = $(cc) $(flags) -c -o  # compilation to intermediary .o files

text-client : ./bin/ClientMain.o ./bin/UnixDomainSocket.o ./bin/DomainSocketClient.o
	$(link) $@ $^

text-server: ./ServerMain.cc ./UnixDomainSocket.cc ./DomainSocketServer.cc
	g++ -std=c++17 -Wall -pedantic ./ServerMain.cc ./UnixDomainSocket.cc ./DomainSocketServer.cc -o text-server

./bin/ClientMain.o : ./src/ClientMain.cc
	$(compile) $@ $<

./bin/UnixDomainSocket.o : ./src/UnixDomainSocket.cc
	$(compile) $@ $<

./bin/DomainSocketClient.o : ./src/DomainSocketServer.cc
	$(compile) $@ $<

clean:
	rm -f bin/* text-client text-server